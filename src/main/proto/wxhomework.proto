syntax = "proto3";

package wxhomework;

// 笑话Service——学生通过情绪认证后页面展示的内容
service JokeService {
    rpc doGetJoke(JokeRequest) returns (JokeResponse) {}
}

message JokeRequest {
    sint32 num = 1;
}

message JokeResponse {
    string jokeId = 1;
    string joke_content = 2;
}

// 消息传递Service
service MessageService {
    rpc doMessageBroadcast(SendMessageRequest) returns (SendMessageResponse) {}
    rpc doMessageReceiver(ReceiveMessageRequest) returns (ReceiveMessageResponse) {}
    rpc doPraise(PraiseRequest) returns (PraiseResponse) {}
}

// 支持请求体
message PraiseRequest {
    string account = 1;
    string messageAccount = 2;
    repeated string messageId = 3;
}

message PraiseResponse {
    string message = 1;
    State state = 2;
}

// 接收消息的请求
message ReceiveMessageRequest {
    string account = 1;
    string token = 2;
}

// 接收消息的响应
message ReceiveMessageResponse {
    repeated ReceiverMessage message = 1;
}


// 发送消息的请求
message SendMessageRequest {
    Message message = 1;
    string token = 2;
}

// 发送消息的响应
message SendMessageResponse {
    string message = 1;
    State state = 2;
}

// 接收消息包——对应mysql中的receiver_message表
message ReceiverMessage {
    string account = 1;
    repeated string messageId = 2;
    string messageAccount = 3;
    string createTime = 4;
}

// 发送消息包——对应mysql中的message表
message Message {
    string messageId = 1;
    string account = 2;
    string createTime = 3;
    string content = 4;
    sint32 sharePersonNums = 5; // 广播普通人接收人数
    sint32 shareDoctorNums = 6; // 广播医生接收人数
    sint32 praiseNums = 7; // 接收量
}

// 资格认证Service
service CcatService {
    rpc doDoctorCCAT(UserInfoRequest) returns (CCATResponse) {}
}

// 资格认证回应体
message CCATResponse {
    string message = 1;
    State state = 2;
    User user = 3;
}

// 登录模块Service
service LoginService {
    rpc doLogin(UserInfoRequest) returns (UserLoginResponse) {}
    rpc doLoginOut(UserInfoRequest) returns (UserLoginResponse) {}
    rpc doRegister(UserInfoRequest) returns (UserRegisterResponse) {}
    rpc doPasswordChange(UserInfoRequest) returns (UserPasswordChangeResponse) {}
}

message UserInfoRequest {
    string account = 1;
    string encodePassword = 2;
    string token = 3;
}

message UserLoginResponse {
    string message = 1;
    State state = 2;
    User user = 3;
    bool has_message = 4; // 是否有未读信息
}

message UserPasswordChangeResponse {
    string message = 1;
    State state = 2;
    User user = 3;
}

message UserRegisterResponse {
    string message = 1;
    State state = 2;
    User user = 3;
}

message State {
    string result = 1;
    string code = 2;
}

message User {
    string account = 1;
    string mid = 4;
    string nick_name = 5;
    string level = 6;
    string head_url = 7;
    string video_url = 8;
}
